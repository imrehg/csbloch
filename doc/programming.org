* Ideas
  + Use the Krylov-subspace method to calculate a time-dependent matrix
    Ie.: instead of exp(tA)v for t = t0...tn, use A(t) within algorithm
    Is it possible?
* Languages
** Python
   Very convenient and flexible, but performance is likely to be sub-par compared to the C++ versions.
   + [-] LAPACK
	 In python-numeric-ext
   + [X] PySparse
	 Sparse matrices, can be the most useful.
   + [-] OpenOpt
	 Universal numerical optimization http://openopt.org/
   + [X] expokit port: Krylov-subspace optimization
	 Together with PySparse it is actually quite quick. Power of C under the hood.
** C++
   Fast but more rigid then Python. Ernie's program is a big hot mess that might have done the job but I don't have fond feelings for.
   Have to consider if it is worth spending time fixing it up
   Uses:
   + LAPACK
     Matrix calculations
   + OpenMP
     Parallel computing
** Fortran
   Option to write my own routines in Fortran. Could be fast, Derek used it for everything. Though linking to Python/C can be tedious and sub-optimal.
   + Expokit
     Dense and sparse matrix exponentials. But it does not seem to be very quick. If the matrix is large, it could be good, though...
* Outstanding questions
  - [ ] Effect of reduced mode-number (while pulse kept the same?)
	How the CPT would change if the input was filtered by a Fabry-Perot cavity
  - [ ] Coherence build up time
  - [ ] Effect of pulse length when overall power is kept the same

* Next Action
  + Three-level calculation redux
    - CW case (make it as a unit-test module)
    - Mode-locked laser
  + Automatic generation of matrices
  + Basic pulsed setup
    - variable ground state separation, repetition rate multiplier, change laser detuning: 0, Delta/2, Delta
  + Include Doppler effect:
    s33(v) + Maxwell-Boltzmann distribution -> fluorescence rate
  + Randomized detuning: high temperature high collision rate
  + Rubidium calculation redux
    based on papers, see how it works
  + Cesium calculation check
    basic pulsed laser calculation
  + Include real effects:
    - finite temperature
    - collision rate
    - transit time
* Physics
** Frequency-space description
   Derek's "Multiply connected states" paper seems to be very useful for this, just the right setup
   Could compare: frequency-space cycle-averaged description vs. time-space analytic calculation, they should match
   Different pulse shape might have role in the mode height calculation
   Collision rate could be included in this the same way as in the CW CPT paper
